{
  "swagger" : "2.0",
  "info" : {
    "version" : "2019-08-16T01:35:11Z",
    "title" : "jsday-serverless-workstations"
  },
  "host" : "lv7gfyq1gc.execute-api.us-east-1.amazonaws.com",
  "basePath" : "/jsday",
  "schemes" : [ "https" ],
  "paths" : {
    "/create" : {
      "post" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:354109350075:function:serverless-workstations-jsday-insert/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/delete" : {
      "post" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:354109350075:function:serverless-workstations-jsday-delete/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/list" : {
      "get" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:354109350075:function:serverless-workstations-jsday-list/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/query" : {
      "post" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:354109350075:function:serverless-workstations-jsday-query/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    },
    "/update" : {
      "post" : {
        "responses" : { },
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:354109350075:function:serverless-workstations-jsday-update/invocations",
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "type" : "aws_proxy"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Credentials" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Credentials" : "'false'",
                "method.response.header.Access-Control-Allow-Methods" : "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "requestTemplates" : {
            "application/json" : "{statusCode:200}"
          },
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "mock"
        }
      }
    }
  }
}